<?xml version="1.0"?>

<!-- MILTER TEST PROJECT                                                     -->
<!--                                                                         -->
<!--  Project to create a PoC for a Java-based mail filter to integrate      -->
<!--  with Postfix                                                           -->
<project name="milter-test" default="compile">

    <!-- local defines -->
    <property file="local.properties"/>

    <!-- define variables for values used in more than place -->
    <property name="LIB_DIR"    location="lib"              />
    <property name="SOURCE_DIR" location="src"              />
    <property name="TEST_DIR"   location="test"             />
    <property name="BUILD_DIR"  location="bin"              />
    <property name="JAR_DIR"    location="${BUILD_DIR}/jar" />

    <property name="scala-library.jar" value="${scala.home}/lib/scala-library.jar"/>
    <property name="scala-reflect.jar" value="${scala.home}/lib/scala-reflect.jar"/>

    <!-- setup path(s) -->
    <path id="build-classpath">
        <fileset dir="${LIB_DIR}">
            <include name="*.jar" />
        </fileset>

        <pathelement path="${BUILD_DIR}" />

        <pathelement location="${scala-library.jar}"/>
        <pathelement location="${scala-reflect.jar}"/>
    </path>

    <!-- Scala taskdef -->
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
        <pathelement location="${scala.home}/lib/scala-compiler.jar"/>
        <pathelement location="${scala-library.jar}"/>
        <pathelement location="${scala-reflect.jar}"/>
      </classpath>
    </taskdef>

    <!-- build target directives -->
    <target name="clean" description="remove intermediate files">
        <delete dir="${BUILD_DIR}" />
    </target>

    <target name="clobber" depends="clean" description="remove all artifact files">
        <delete file="${JAR_DIR}/milter.jar" />
    </target>

    <target name="compile" description="compile the Java source code to class files">
        <mkdir dir="${BUILD_DIR}/java" />
        <javac includeantruntime="false" srcdir="${SOURCE_DIR}/java" destdir="${BUILD_DIR}/java">
            <classpath refid="build-classpath" />
        </javac>
    </target>

    <target name="compile-test" depends="compile" description="compile the Java test source code to class files">
        <mkdir dir="${BUILD_DIR}/java" />
        <javac includeantruntime="false" srcdir="${TEST_DIR}/java" destdir="${BUILD_DIR}/java">
            <classpath refid="build-classpath" />
        </javac>
    </target>

    <target name="jar" depends="compile" description="create a Jar file for the application">
        <jar destfile="${BUILD_DIR}/jar/milter.jar">
            <fileset dir="${BUILD_DIR}/java" includes="**/*.class" />
            <manifest>
                <attribute name="Main-Class" value="com.dyndns.email.postfix.milter.PostfixMilter" />
                <attribute name="Class-Path" value="${LIB_DIR}/javax.mail.jar" />
            </manifest>
        </jar>
    </target>

    <target name="scala-client" depends="compile" description="build scala client program">
        <scalac srcdir="${TEST_DIR}/scala" destdir="${BUILD_DIR}" deprecation="yes" unchecked="yes" >
            <classpath refid="build-classpath"/>
        </scalac>
    </target>

    <target name="run" depends="jar" description="executes the milter program">
        <java jar="${JAR_DIR}/milter.jar" fork="true"/>
    </target>

    <target name="run-test" depends="compile-test" description="executes the milter program tests">
        <java dir="${BUILD_DIR}/java" classname="com.dyndns.email.postfix.milter.PostfixMilterTest" fork="true" />
    </target>

</project>
